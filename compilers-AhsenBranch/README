A JFlex+Cup implementation for the Cminus language.

  Note that you need to modify the classpath in the Makefile so that it
will point to the directory where "java_cup" is located.  In my own setting,
classpath is /usr/share/java/cup.jar.

  To build the parser, type "make" in the current directory, which will 
generate an executable program called "cminus".

  To test source code like "fac.cm", type 

    "java -classpath /usr/share/java/cup.jar:. Main cMinusTestFiles/fac.cm -s -a" 

	If you want to generate a symbol table, add -s to the arguments. A file named: symbolTable.txt will be generated.
	
	If you want to generate a syntax tree, add -a to the arguments. A file named: syntaxTree.txt will be generated.


  To rebuild the parser, type "make clean" and type "make" again.

  Also note that all the abstract syntax tree structures are defined under
the directory "absyn" and within "Absyn.java" class, the showTree function
is implemented.  In addition, since some java files are generated automatically,
they may contain variables that are not used, which are safe to ignore in
the compilation process.

We are re-submitting this assignment with a fixed parser that works and that also has error checking.
